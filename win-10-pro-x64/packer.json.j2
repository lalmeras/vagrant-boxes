@=- macro merge_json(json1) -=@
@=- set merged = dict(json1 | fromjson, **(caller() | fromjson)) -=@
@@ merged | jsonify @@
@=- endmacro -=@

@=- set builder_common -=@
{
  "vm_name": "{{ user `basename` }}",
  "boot_wait": "6m",
  "communicator": "winrm",
  "winrm_username": "vagrant",
  "winrm_password": "vagrant",
  "winrm_timeout": "{{ user `winrm_timeout` }}",
  "cpus": "{{ user `cpus` }}",
  "memory": "{{ user `memory` }}",
  "disk_size": "{{ user `disk_size` }}",
  "headless": true,
  "iso_checksum": "{{ user `iso_checksum_type` }}:{{ user `iso_checksum` }}",
  "iso_url": "{{ user `iso_url` }}",
  "floppy_files": [
    "{{ template_dir }}/answer_files/Autounattend.xml",
    "{{ user `script_dir` }}/fixnetwork.ps1",
    "{{ user `script_dir` }}/disable-screensaver.ps1",
    "{{ user `script_dir` }}/disable-winrm.ps1",
    "{{ user `script_dir` }}/enable-winrm.ps1",
    "{{ user `script_dir` }}/microsoft-updates.bat",
    "{{ user `script_dir` }}/win-updates.ps1"
  ],
  "shutdown_command": "shutdown /s /t 10 /f /d p:4:1 /c \"Packer Shutdown\"",
  "output_directory": "windows_10"
}
@=- endset -=@

@=- macro qemu() -=@
@=- call conditional("qemu" in builders) -=@
@=- call merge_json(builder_common) -=@
{
  "type": "qemu",
  "accelerator": "kvm",
  "qemuargs": [
    [
      "-drive",
      "file=windows_10/{{ .Name }},if=virtio,cache=writeback,discard=ignore,format=qcow2,index=1"
    ],
    [
      "-drive",
      "file={{ user `iso_url` }},media=cdrom,index=2"
    ],
    [
      "-drive",
      "file={{ user `virtio_win_iso` }},media=cdrom,index=3"
    ],
    [
      "-usb"
    ],
    [
      "-device",
      "usb-tablet"
    ]
  ]
}
@=- endcall -=@
@=- endcall -=@
@=- endmacro -=@

@=- macro virtualbox_iso() -=@
@=- call conditional("virtualbox-iso" in builders) -=@
@=- call merge_json(builder_common) -=@
{
  "type": "virtualbox-iso",
  "guest_additions_mode": "disable",
  "guest_os_type": "Windows10_64",
  "nested_virt": true,
  "gfx_vram_size": 128
}
@=- endcall -=@
@=- endcall -=@
@=- endmacro -=@

@=- macro conditional(condition) -=@
@=- if condition -=@
@@ caller() @@
@=- endif -=@
@=- endmacro -=@

@=- macro windows_shell(command, condition) -=@
@=- call conditional(condition) -=@
{
  "execute_command": "{{ .Vars }} cmd /c \"{{ .Path }}\"",
  "remote_path": "/tmp/script.bat",
  "scripts": [
    @@ command | jsonify | indent(width=2) @@
  ],
  "type": "windows-shell"
}
@=- endcall -=@
@=- endmacro -=@

@=- macro powershell(command, condition) -=@
@=- call conditional(condition) -=@
{
  "scripts": [
    @@ command | jsonify | indent(width=2) @@
  ],
  "type": "powershell"
}
@=- endcall -=@
@=- endmacro -=@

@=- macro windows_restart(condition) -=@
@=- call conditional(condition) -=@
{
  "restart_timeout": "{{user `restart_timeout`}}",
  "type": "windows-restart"
}
@=- endcall -=@
@=- endmacro -=@

@=- macro vagrant(condition) -=@
@=- call conditional(condition) -=@
{
  "keep_input_artifact": @@ keep_input_artifact | default(False) | jsonify @@,
  "output": "{{ user `basename` }}_{{.Provider}}.box",
  "type": "vagrant",
  "vagrantfile_template": "{{ user `source_dir` }}/win-10-pro-x64/vagrantfile.template"
}
@=- endcall -=@
@=- endmacro -=@

{
  "builders": @@ [
    virtualbox_iso(),
    qemu()
  ] | select("ne", "") | map("fromjson") | list | jsonify | indent(width=2) @@,
  "provisioners": @@ [
      windows_shell("{{ user `script_dir` }}/enable-rdp.bat", enable_rdp | default(False)),
      windows_shell("{ user `script_dir` }}/scripts/vm-guest-tools.bat", guest_additions | default(False)),
      powershell("{{ user `script_dir` }}/debloat-windows.ps1", debloat | default(False)),
      windows_restart(debloat | default(False)),
      powershell("{{ user `script_dir` }}/set-powerplan.ps1", powerplan | default(False)),
      windows_shell([
        "{{ user `script_dir` }}/compile-dotnet-assemblies.bat",
        "{{ user `script_dir` }}/set-winrm-automatic.bat",
        "{{ user `script_dir` }}/uac-enable.bat",
        "{{ user `script_dir` }}/dis-updates.bat",
        "{{ user `script_dir` }}/compact.bat"
      ], other | default(False))
  ] | select("ne", "") | map("fromjson") | list | jsonify | indent(width=2) @@,
  "post-processors": @@ [
      vagrant(vagrant | default(True))
  ] | select("ne", "") | map("fromjson") | list | jsonify | indent(width=2) @@,
  "variables": {
    "basename": "windows-10-pro-x64",
    "disk_size": "61440",
    "cpus": "2",
    "memory": "2048",
    "disk_type_id": "1",
    "headless": "false",
    "iso_checksum": "768638760180cac5a38bbf91638ad58479ffce0fd310abe3e428b92d0ecc715c",
    "iso_checksum_type": "sha256",
    "iso_url": "{{ user `source_dir` }}/images/Win10_20H2_v2_French_x64.iso",
    "script_dir": "{{ user `source_dir` }}/win-10-pro-x64/scripts",
    "restart_timeout": "5m",
    "vhv_enable": "false",
    "virtio_win_iso": "{{ user `source_dir` }}/virtio-win.iso",
    "winrm_timeout": "1h"
  }
}
